basePath: /
definitions:
  request.CreateBlogRequest:
    properties:
      description:
        type: string
      image:
        type: string
      title:
        type: string
    required:
    - description
    - image
    - title
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  request.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  request.UpdateBlogRequest:
    properties:
      description:
        type: string
      image:
        type: string
      title:
        type: string
    required:
    - description
    - image
    - title
    type: object
  transformer.BlogTransformer:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      title:
        type: string
    type: object
  transformer.LoginTransformer:
    properties:
      token:
        type: string
    type: object
  transformer.MeTransformer:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  transformer.RegisterTransformer:
    properties:
      token:
        type: string
    type: object
  utils.JSONResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
      timestamp:
        type: integer
    type: object
info:
  contact:
    email: granitebagas28@gmail.com
    name: Granite Bagas
    url: https://granitebps.com
  description: This is a Fiber API Doc
  license:
    name: MIT
  title: Fiber API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      parameters:
      - description: JSON payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/transformer.LoginTransformer'
              type: object
        "422":
          description: Unprocessable Entity
      summary: Login existing user
      tags:
      - auth
  /api/v1/auth/me:
    get:
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/transformer.MeTransformer'
              type: object
        "401":
          description: Unauthorized
      security:
      - Bearer: []
      summary: Get authenticated user
      tags:
      - auth
  /api/v1/auth/register:
    post:
      parameters:
      - description: JSON payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/transformer.RegisterTransformer'
              type: object
        "422":
          description: Unprocessable Entity
      summary: Register a new user
      tags:
      - auth
  /api/v1/blogs:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/transformer.BlogTransformer'
                  type: array
              type: object
      summary: Get all blogs
      tags:
      - blog
    post:
      parameters:
      - description: JSON payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.CreateBlogRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/transformer.BlogTransformer'
              type: object
        "422":
          description: Unprocessable Entity
      summary: Save blog to database
      tags:
      - blog
  /api/v1/blogs/{id}:
    delete:
      parameters:
      - description: blog id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONResponse'
        "404":
          description: Not Found
      summary: Delete existing blog by ID
      tags:
      - blog
    get:
      parameters:
      - description: blog id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/transformer.BlogTransformer'
              type: object
        "404":
          description: Not Found
      summary: Get single blog by ID
      tags:
      - blog
    put:
      parameters:
      - description: blog id
        in: path
        name: id
        required: true
        type: integer
      - description: JSON payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/request.UpdateBlogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JSONResponse'
            - properties:
                data:
                  $ref: '#/definitions/transformer.BlogTransformer'
              type: object
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
      summary: Update existing blog by ID
      tags:
      - blog
  /api/v1/ping:
    get:
      description: Do a ping to service just make sure service is working normally.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JSONResponse'
      summary: Ping to the service
      tags:
      - tools
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
